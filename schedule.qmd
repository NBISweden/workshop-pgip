---
title: "Schedule"
toc: false
date: ""
format:
  nbis-course-html:
    toc: false
    number-sections: false
    page-layout: full
execute:
  cache: false
  freeze: false
---

{{< include _rinit.qmd >}}

::: {.callout-note}

This is a tentative schedule that may be subject to change during the
course!

:::

```{r }
#| label: toastui-calendar
#| echo: false
#| eval: true
fn_rle <- function(x) {
  r <- rle(x)
  return(rep(paste(r$values, 1:length(r$values), sep = "-"), times = r$lengths))
}

dfr <- s %>%
  # filter(!is.na(type)) %>%
  mutate(time = as.character(time)) %>%
  tidyr::fill(date, .direction = "down") %>%
  mutate(start = lubridate::dmy_hm(paste(.$date, .$time))) %>%
  mutate(start_time = lubridate::hm(time)) %>%
  group_by(date) %>%
  mutate(delta = lead(
             start_time,
             default=start_time[length(start_time)]) - start_time) %>%
  ungroup() %>%
  tidyr::drop_na(type) %>%
  mutate(end = start + delta) %>%
  mutate(grp = paste0(fn_rle(type), "-", fn_rle(title)), .by = date) %>%
  mutate(body_full = paste(
             ifelse(is.na(.$body), "",
                    .$body),
    ifelse(is.na(.$instructor), "",
      paste0("<br>", .$instructor)
    )
  )) %>%
  group_by(date, grp) %>%
  summarise(
    type = type[1], body = body_full[1], title = title[1],
    start = start[1], end = tail(end, n = 1)
  ) %>%
  ungroup() %>%
  mutate(calendarId = as.character(as.integer(as.factor(type)))) %>%
  mutate(
    start = as.character(lubridate::ymd_hms(start)),
    end = as.character(lubridate::ymd_hms(end))
  ) %>%
  dplyr::select(calendarId, title, body, start, end, type) %>%
  mutate(category = "time") %>%
  dplyr::arrange(start)

nbiscolors <- list(
    lime="#a7c947",
    lime25="#e9f2d1",
    lime50="#d3e4a3",
    lime75="#bdd775",
    teal="#045c64",
    teal25="#c0d6d8",
    teal50="#82aeb2",
    teal75="#43858b",
    aqua="#4c979f",
    aqua25="#d2e5e7",
    aqua50="#a6cbcf",
    aqua75="#79b1b7",
    grape="#491f53",
    grape25="#d2c7d4",
    grape50="#a48fa9",
    grape75="#77577e",
    lightgray="#e5e5e5",
    mediumgray="#a6a6a6",
    darkgray="#3f3f3f",
    black="#202020"
)

colors <- data.frame(
  id = c("1", "2", "3", "4", "5", "6"),
  name = c("Break", "Extra", "Lab", "Talk", "Session", "Seminar"),
  color = c(rep("#2c3e50", 6)),
  backgroundColor = c(
      nbiscolors$lightgray, nbiscolors$aqua25, nbiscolors$teal50,
      nbiscolors$lime25, nbiscolors$lime75, nbiscolors$grape50
  ),
  borderColor = c(
      nbiscolors$darkgray, nbiscolors$aqua, nbiscolors$teal,
      nbiscolors$lime, nbiscolors$lime, nbiscolors$grape
  )
)
rownames(colors) <- colors$id

calendar(dfr,
  view = "week", navigation = TRUE,
  defaultDate = as.Date("2025-09-15"), height = 1000
) %>%
  cal_week_options(
    startDayOfWeek = 1, hourStart = 9, hourEnd = 17,
    eventView = "time", showNowIndicator = TRUE,
    endDayOfWeek = 4, workweek=TRUE
  ) %>%
  cal_props(colors)
```
